// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   Int @id @default(autoincrement())
  name                 String
  surname              String?
  email                String @unique
  password             String 
  role                 String? //admin vip null 
  course               String?
  active               Boolean @default(true)
  acceptNotifications  Boolean @default(true)

  createdAt            DateTime @default(now())
  updateAt             DateTime @updatedAt

  Offers               Offerts[]

  Rate Rate[]
} 

model Offerts {
  id                   Int @id @default(autoincrement())
  title                String 
  description          String?
  active               Boolean @default(true)
  contactEmail         String?
  location             String?
  published            DateTime @default(now()) //formato iso8601
  expired              DateTime //formato iso8601

  createdAt            DateTime @default(now())
  updateAt             DateTime @updatedAt

  //FK
  idCategory           Int?
  category             Category? @relation(fields: [idCategory], references: [id])

  idUserCreator        Int
  userCreator          User @relation(fields: [idUserCreator], references: [id])

  Rate Rate[]
}

model Category{
  id                   Int @id @default(autoincrement())
  name                 String @unique

  createdAt            DateTime @default(now())
  updateAt             DateTime @updatedAt

  offerts              Offerts[]
}

model Rate{
  idUser               Int
  idOffer              Int
  value                Int 

  createdAt            DateTime @default(now())
  updateAt             DateTime @updatedAt

  user                 User @relation(fields: [idUser], references: [id])
  offer                Offerts @relation(fields: [idOffer], references: [id])

  @@id([idUser, idOffer])
}